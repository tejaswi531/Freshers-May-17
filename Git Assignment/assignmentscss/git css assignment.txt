tpotnuru@LIN65005823 MINGW64 ~
$ git clone
fatal: You must specify a repository to clone.

usage: git clone [<options>] [--] <repo> [<dir>]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    --reject-shallow      don't clone shallow repository
    -n, --no-checkout     don't create a checkout
    --bare                create a bare repository
    --mirror              create a mirror repository (implies bare)
    -l, --local           to clone from a local repository
    --no-hardlinks        don't use local hardlinks, always copy
    -s, --shared          setup as shared repository
    --recurse-submodules[=<pathspec>]
                          initialize submodules in the clone
    --recursive ...       alias of --recurse-submodules
    -j, --jobs <n>        number of submodules cloned in parallel
    --template <template-directory>
                          directory from which templates will be used
    --reference <repo>    reference repository
    --reference-if-able <repo>
                          reference repository
    --dissociate          use --reference only while cloning
    -o, --origin <name>   use <name> instead of 'origin' to track upstream
    -b, --branch <branch>
                          checkout <branch> instead of the remote's HEAD
    -u, --upload-pack <path>
                          path to git-upload-pack on the remote
    --depth <depth>       create a shallow clone of that depth
    --shallow-since <time>
                          create a shallow clone since a specific time
    --shallow-exclude <revision>
                          deepen history of shallow clone, excluding rev
    --single-branch       clone only one branch, HEAD or --branch
    --no-tags             don't clone any tags, and make later fetches not to follow them
    --shallow-submodules  any cloned submodules will be shallow
    --separate-git-dir <gitdir>
                          separate git dir from working tree
    -c, --config <key=value>
                          set config inside the new repository
    --server-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only
    --filter <args>       object filtering
    --remote-submodules   any cloned submodules will use their remote-tracking branch
    --sparse              initialize sparse-checkout file to include only files at root


tpotnuru@LIN65005823 MINGW64 ~
$ cd desktop

tpotnuru@LIN65005823 MINGW64 ~/desktop
$ mkdir assignmentscss

tpotnuru@LIN65005823 MINGW64 ~/desktop
$ cd assignmentscss

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss
$  git add Readme.txt
fatal: not a git repository (or any of the parent directories): .git

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss
$ touch Readme.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss
$ git add Readme.txt
fatal: not a git repository (or any of the parent directories): .git

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss
$ git init
Initialized empty Git repository in C:/Users/TPOTNURU/Desktop/assignmentscss/.git/

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Readme.txt

nothing added to commit but untracked files present (use "git add" to track)

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git add Readme.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ vi Readme.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git commit -m 'Readme.txt file commited'
[master (root-commit) 3e370ff] Readme.txt file commited
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 Readme.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ touch css assignments

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> master


tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git branch css-assignments

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git switch 'css-assignments'
Switched to branch 'css-assignments'
M       Readme.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (css-assignments)
$  git checkout master Readme.txt
Updated 1 path from 4825bf4

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (css-assignments)
$ git status
On branch css-assignments
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        assignments
        css

nothing added to commit but untracked files present (use "git add" to track)

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (css-assignments)
$ touch file.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (css-assignments)
$  git add -A

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (css-assignments)
$ git status
On branch css-assignments
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   assignments
        new file:   css
        new file:   file.txt


tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (css-assignments)
$ git switch master
Switched to branch 'master'
A       assignments
A       css
A       file.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ touch file.css

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git add -A

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   assignments
        new file:   css
        new file:   file.css
        new file:   file.txt


tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git stash
Saved working directory and index state WIP on master: 3e370ff Readme.txt file commited

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ git switch master
Already on 'master'

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$  git merge css-assignments
Already up to date.

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ $ git branch -d html-assignments
bash: $: command not found

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$ $ git branch -d css-assignments
bash: $: command not found

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$  git branch -d css-assignments
Deleted branch css-assignments (was 3e370ff).

tpotnuru@LIN65005823 MINGW64 ~/desktop/assignmentscss (master)
$
